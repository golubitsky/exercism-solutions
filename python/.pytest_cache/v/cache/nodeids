[
  "acronym/acronym_test.py::AcronymTest::test_all_caps_words",
  "acronym/acronym_test.py::AcronymTest::test_basic",
  "acronym/acronym_test.py::AcronymTest::test_lowercase_words",
  "acronym/acronym_test.py::AcronymTest::test_punctuation",
  "acronym/acronym_test.py::AcronymTest::test_punctuation_without_whitespace",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_eggs_and_peanuts",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_eggs_in_addition_to_other_stuff",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_everything",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_just_eggs",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_just_peanuts",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_just_strawberries",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_lots_of_stuff",
  "allergies/allergies_test.py::AllergiesTests::test_allergic_to_more_than_eggs_but_not_peanuts",
  "allergies/allergies_test.py::AllergiesTests::test_ignore_non_allergen_score_parts",
  "allergies/allergies_test.py::AllergiesTests::test_ignore_non_allergen_score_parts_only_eggs",
  "allergies/allergies_test.py::AllergiesTests::test_is_allergic_to_eggs",
  "allergies/allergies_test.py::AllergiesTests::test_no_allergies_at_all",
  "allergies/allergies_test.py::AllergiesTests::test_no_allergies_means_not_allergic",
  "anagram/anagram_test.py::AnagramTests::test_anagrams_must_use_all_letters_exactly_once",
  "anagram/anagram_test.py::AnagramTests::test_capital_word_is_not_own_anagram",
  "anagram/anagram_test.py::AnagramTests::test_detects_anagram",
  "anagram/anagram_test.py::AnagramTests::test_detects_anagrams_case_insensitively",
  "anagram/anagram_test.py::AnagramTests::test_detects_anagrams_using_case_insensitive_possible_matches",
  "anagram/anagram_test.py::AnagramTests::test_detects_anagrams_using_case_insensitive_subject",
  "anagram/anagram_test.py::AnagramTests::test_detects_three_anagrams",
  "anagram/anagram_test.py::AnagramTests::test_detects_two_anagrams",
  "anagram/anagram_test.py::AnagramTests::test_does_not_detect_a_anagram_if_the_original_word_is_repeated",
  "anagram/anagram_test.py::AnagramTests::test_does_not_detect_anagram_subsets",
  "anagram/anagram_test.py::AnagramTests::test_does_not_detect_non_anagrams_with_identical_checksum",
  "anagram/anagram_test.py::AnagramTests::test_no_matches",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_four_digit_number_that_is_an_armstrong_number",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_four_digit_number_that_is_not_an_armstrong_number",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_seven_digit_number_that_is_an_armstrong_number",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_seven_digit_number_that_is_not_an_armstrong_number",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_single_digit_numbers_are_armstrong_numbers",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_there_are_no_two_digit_armstrong_numbers",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_three_digit_number_that_is_an_armstrong_number",
  "armstrong-numbers/armstrong_numbers_test.py::ArmstrongTests::test_three_digit_number_that_is_not_an_armstrong_number",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_decode_all_the_letters",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_decode_numbers",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_decode_sentence",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_decode_word",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_OMG",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_O_M_G",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_all_things",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_decode",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_long_word",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_no",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_numbers",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_sentence",
  "atbash-cipher/atbash_cipher_test.py::AtbashCipherTest::test_encode_yes",
  "bob/bob_test.py::BobTests::test_alternate_silence",
  "bob/bob_test.py::BobTests::test_asking_a_numeric_question",
  "bob/bob_test.py::BobTests::test_asking_a_question",
  "bob/bob_test.py::BobTests::test_asking_gibberish",
  "bob/bob_test.py::BobTests::test_ending_with_whitespace",
  "bob/bob_test.py::BobTests::test_forceful_question",
  "bob/bob_test.py::BobTests::test_multiple_line_question",
  "bob/bob_test.py::BobTests::test_non_letters_with_question",
  "bob/bob_test.py::BobTests::test_non_question_ending_with_whitespace",
  "bob/bob_test.py::BobTests::test_only_numbers",
  "bob/bob_test.py::BobTests::test_other_whitespace",
  "bob/bob_test.py::BobTests::test_prattling_on",
  "bob/bob_test.py::BobTests::test_prolonged_silence",
  "bob/bob_test.py::BobTests::test_question_with_only_numbers",
  "bob/bob_test.py::BobTests::test_shouting",
  "bob/bob_test.py::BobTests::test_shouting_gibberish",
  "bob/bob_test.py::BobTests::test_shouting_numbers",
  "bob/bob_test.py::BobTests::test_shouting_with_no_exclamation_mark",
  "bob/bob_test.py::BobTests::test_shouting_with_special_characters",
  "bob/bob_test.py::BobTests::test_silence",
  "bob/bob_test.py::BobTests::test_starting_with_whitespace",
  "bob/bob_test.py::BobTests::test_statement_containing_question_mark",
  "bob/bob_test.py::BobTests::test_stating_something",
  "bob/bob_test.py::BobTests::test_talking_forcefully",
  "bob/bob_test.py::BobTests::test_using_acronyms_in_regular_speech",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_difference_of_squares_1",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_difference_of_squares_100",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_difference_of_squares_5",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_square_of_sum_1",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_square_of_sum_100",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_square_of_sum_5",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_sum_of_squares_1",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_sum_of_squares_100",
  "difference-of-squares/difference_of_squares_test.py::DifferenceOfSquaresTest::test_sum_of_squares_5",
  "gigasecond/gigasecond_test.py::GigasecondTest::test_another_date_only_specification_of_time",
  "gigasecond/gigasecond_test.py::GigasecondTest::test_date_only_specification_of_time",
  "gigasecond/gigasecond_test.py::GigasecondTest::test_full_time_specified",
  "gigasecond/gigasecond_test.py::GigasecondTest::test_full_time_with_day_roll_over",
  "gigasecond/gigasecond_test.py::GigasecondTest::test_one_more_date_only_specification_of_time",
  "gigasecond/gigasecond_test.py::GigasecondTest::test_yourself",
  "grade-school/grade_school_test.py::SchoolTest::test_add_more_students_in_same_class",
  "grade-school/grade_school_test.py::SchoolTest::test_add_student",
  "grade-school/grade_school_test.py::SchoolTest::test_add_students_to_different_grades",
  "grade-school/grade_school_test.py::SchoolTest::test_an_empty_school",
  "grade-school/grade_school_test.py::SchoolTest::test_get_students_in_a_grade",
  "grade-school/grade_school_test.py::SchoolTest::test_get_students_in_a_non_existant_grade",
  "grade-school/grade_school_test.py::SchoolTest::test_sort_school",
  "hamming/hamming_test.py::HammingTest::test_complete_distance_in_single_nucleotide_strands",
  "hamming/hamming_test.py::HammingTest::test_complete_distance_in_small_strands",
  "hamming/hamming_test.py::HammingTest::test_disallow_first_strand_longer",
  "hamming/hamming_test.py::HammingTest::test_disallow_second_strand_longer",
  "hamming/hamming_test.py::HammingTest::test_empty_strands",
  "hamming/hamming_test.py::HammingTest::test_identical_strands",
  "hamming/hamming_test.py::HammingTest::test_large_distance",
  "hamming/hamming_test.py::HammingTest::test_large_distance_in_off_by_one_strand",
  "hamming/hamming_test.py::HammingTest::test_long_identical_strands",
  "hamming/hamming_test.py::HammingTest::test_non_unique_character_in_first_strand",
  "hamming/hamming_test.py::HammingTest::test_non_unique_character_in_second_strand",
  "hamming/hamming_test.py::HammingTest::test_same_nucleotides_in_different_positions",
  "hamming/hamming_test.py::HammingTest::test_small_distance",
  "hamming/hamming_test.py::HammingTest::test_small_distance_in_long_strands",
  "hamming/hamming_test.py::HammingTest::test_small_distance_in_small_strands",
  "hello-world/hello_world_test.py::HelloWorldTests::test_hello",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_input_is_nine_characters",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_X_other_than_check_digit",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_character_in_isbn",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_check_digit",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_check_digit_X_used_for_0",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_check_digit_other_than_X",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_isbn_without_check_digit",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_isbn_without_check_digit_and_dashes",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_too_long_isbn",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_invalid_too_long_isbn_with_no_dashes",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_valid_empty_isbn",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_valid_isbn_number",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_valid_isbn_without_separating_dashes",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_valid_isbn_without_separating_dashes_with_X_check_digit",
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTests::test_valid_with_X_check_digit",
  "isogram/isogram_test.py::TestIsogram::test_duplicated_character_in_the_middle",
  "isogram/isogram_test.py::TestIsogram::test_empty_string",
  "isogram/isogram_test.py::TestIsogram::test_hypothetical_isogrammic_word_with_hyphen",
  "isogram/isogram_test.py::TestIsogram::test_isogram_with_duplicated_hyphen",
  "isogram/isogram_test.py::TestIsogram::test_isogram_with_duplicated_letter_and_nonletter_character",
  "isogram/isogram_test.py::TestIsogram::test_isogram_with_only_lower_case_characters",
  "isogram/isogram_test.py::TestIsogram::test_longest_reported_english_isogram",
  "isogram/isogram_test.py::TestIsogram::test_made_up_name_that_is_an_isogram",
  "isogram/isogram_test.py::TestIsogram::test_word_with_duplicated_character_in_mixed_case",
  "isogram/isogram_test.py::TestIsogram::test_word_with_one_duplicated_character",
  "kindergarten-garden/kindergarten_garden_test.py::KindergartenGardenTests::test_different_garden_with_single_student",
  "kindergarten-garden/kindergarten_garden_test.py::KindergartenGardenTests::test_disordered_test",
  "kindergarten-garden/kindergarten_garden_test.py::KindergartenGardenTests::test_full_garden",
  "kindergarten-garden/kindergarten_garden_test.py::KindergartenGardenTests::test_garden_with_single_student",
  "kindergarten-garden/kindergarten_garden_test.py::KindergartenGardenTests::test_garden_with_two_students",
  "kindergarten-garden/kindergarten_garden_test.py::KindergartenGardenTests::test_multiple_students_for_the_same_garden_with_three_students",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_can_find_the_largest_product_of_2",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_can_find_the_largest_product_of_2_with_numbers_in_order",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_can_find_the_largest_product_of_3",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_can_find_the_largest_product_of_3_with_numbers_in_order",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_can_find_the_largest_product_of_5_with_numbers_in_order",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_can_get_the_largest_product_of_a_big_number",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_finds_the_largest_product_if_span_equals_length",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_project_euler_big_number",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_rejects_empty_string_and_nonzero_span",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_rejects_invalid_character_in_digits",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_rejects_negative_span",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_rejects_span_longer_than_string_length",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_reports_1_for_empty_string_and_empty_product_0_span",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_reports_1_for_nonempty_string_and_empty_product_0_span",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_reports_zero_if_all_spans_include_zero",
  "largest-series-product/largest_series_product_test.py::SeriesTest::test_reports_zero_if_the_only_digits_are_zero",
  "leap/leap_test.py::YearTest::test_year_divisible_by_100_not_divisible_by_400",
  "leap/leap_test.py::YearTest::test_year_divisible_by_400",
  "leap/leap_test.py::YearTest::test_year_divisible_by_4_not_divisible_by_100",
  "leap/leap_test.py::YearTest::test_year_not_divisible_by_4",
  "meetup/meetup_test.py::MeetupTest::test_fifth_monday_of_march_2015",
  "meetup/meetup_test.py::MeetupTest::test_first_friday_of_december_2012",
  "meetup/meetup_test.py::MeetupTest::test_first_friday_of_december_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_friday_of_november_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_monday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_monday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_saturday_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_saturday_of_january_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_sunday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_sunday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_thursday_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_thursday_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_tuesday_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_tuesday_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_wednesday_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_first_wednesday_of_july_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_friday_of_december_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_friday_of_november_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_monday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_monday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_saturday_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_saturday_of_january_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_sunday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_sunday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_thursday_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_thursday_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_tuesday_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_tuesday_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_wednesday_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_fourth_wednesday_of_july_2013",
  "meetup/meetup_test.py::MeetupTest::test_friteenth_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_friteenth_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_friteenth_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_friday_of_december_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_friday_of_november_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_monday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_monday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_saturday_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_saturday_of_january_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_sunday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_sunday_of_february_2015",
  "meetup/meetup_test.py::MeetupTest::test_last_sunday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_thursday_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_thursday_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_tuesday_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_tuesday_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_wednesday_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_last_wednesday_of_december_2014",
  "meetup/meetup_test.py::MeetupTest::test_last_wednesday_of_february_2012",
  "meetup/meetup_test.py::MeetupTest::test_last_wednesday_of_july_2013",
  "meetup/meetup_test.py::MeetupTest::test_monteenth_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_monteenth_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_monteenth_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_nonexistent_fifth_monday_of_february_2015",
  "meetup/meetup_test.py::MeetupTest::test_saturteenth_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_saturteenth_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_saturteenth_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_friday_of_december_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_friday_of_november_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_monday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_monday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_saturday_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_saturday_of_january_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_sunday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_sunday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_thursday_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_thursday_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_tuesday_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_tuesday_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_wednesday_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_second_wednesday_of_july_2013",
  "meetup/meetup_test.py::MeetupTest::test_sunteenth_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_sunteenth_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_sunteenth_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_friday_of_december_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_friday_of_november_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_monday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_monday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_saturday_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_saturday_of_january_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_sunday_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_sunday_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_thursday_of_october_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_thursday_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_tuesday_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_tuesday_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_wednesday_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_third_wednesday_of_july_2013",
  "meetup/meetup_test.py::MeetupTest::test_thursteenth_of_june_2013",
  "meetup/meetup_test.py::MeetupTest::test_thursteenth_of_may_2013",
  "meetup/meetup_test.py::MeetupTest::test_thursteenth_of_september_2013",
  "meetup/meetup_test.py::MeetupTest::test_tuesteenth_of_april_2013",
  "meetup/meetup_test.py::MeetupTest::test_tuesteenth_of_august_2013",
  "meetup/meetup_test.py::MeetupTest::test_tuesteenth_of_march_2013",
  "meetup/meetup_test.py::MeetupTest::test_wednesteenth_of_february_2013",
  "meetup/meetup_test.py::MeetupTest::test_wednesteenth_of_january_2013",
  "meetup/meetup_test.py::MeetupTest::test_wednesteenth_of_june_2013",
  "pangram/pangram_test.py::PangramTests::test_another_missing_character",
  "pangram/pangram_test.py::PangramTests::test_missing_character_x",
  "pangram/pangram_test.py::PangramTests::test_missing_letters_replaced_by_numbers",
  "pangram/pangram_test.py::PangramTests::test_pangram_with_mixedcase_and_punctuation",
  "pangram/pangram_test.py::PangramTests::test_pangram_with_numbers",
  "pangram/pangram_test.py::PangramTests::test_pangram_with_only_lower_case",
  "pangram/pangram_test.py::PangramTests::test_pangram_with_underscores",
  "pangram/pangram_test.py::PangramTests::test_recognizes_a_perfect_lower_case_pangram",
  "pangram/pangram_test.py::PangramTests::test_sentence_empty",
  "pangram/pangram_test.py::PangramTests::test_upper_and_lower_case_versions_of_the_same_character",
  "reverse-string/reverse_string_test.py::ReverseStringTests::test_a_capitalized_word",
  "reverse-string/reverse_string_test.py::ReverseStringTests::test_a_palindrome",
  "reverse-string/reverse_string_test.py::ReverseStringTests::test_a_sentence_with_punctuation",
  "reverse-string/reverse_string_test.py::ReverseStringTests::test_a_word",
  "reverse-string/reverse_string_test.py::ReverseStringTests::test_empty_string",
  "rna-transcription/rna_transcription_test.py::RNATranscriptionTests::test_transcribes_adenine_to_uracil",
  "rna-transcription/rna_transcription_test.py::RNATranscriptionTests::test_transcribes_all_occurrences",
  "rna-transcription/rna_transcription_test.py::RNATranscriptionTests::test_transcribes_cytosine_to_guanine",
  "rna-transcription/rna_transcription_test.py::RNATranscriptionTests::test_transcribes_guanine_to_cytosine",
  "rna-transcription/rna_transcription_test.py::RNATranscriptionTests::test_transcribes_thymine_to_adenine",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_advance_negative_south",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_advance_negative_west",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_advance_positive_east",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_advance_positive_north",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_init",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_setup",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_simulate_prog1",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_simulate_prog2",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_simulate_prog3",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_turn_left",
  "robot-simulator/robot_simulator_test.py::RobotTests::test_turn_right",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_a_by_0",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_a_by_1",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_a_by_26",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_all_letters",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_capital_letters",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_m_by_13",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_n_by_13_with_wrap_around_alphabet",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_numbers",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_punctuation",
  "rotational-cipher/rotational_cipher_test.py::RotationalCipher::test_rotate_spaces",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_combination",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_decode_empty_string",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_decode_lower_case_string",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_decode_multiple_whitespace_mixed_in_string",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_decode_single_characters_only",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_decode_single_characters_with_repeated_characters",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_decode_string_with_no_single_characters",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_encode_empty_string",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_encode_lowercase_characters",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_encode_multiple_whitespace_mixed_in_string",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_encode_single_characters_mixed_with_repeated_characters",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_encode_single_characters_only_are_encoded_without_count",
  "run-length-encoding/run_length_encoding_test.py::RunLengthEncodingTests::test_encode_string_with_no_single_characters",
  "say/say_test.py::SayTest::test_1002345",
  "say/say_test.py::SayTest::test_987654321123",
  "say/say_test.py::SayTest::test_eight_hundred_and_ten_thousand",
  "say/say_test.py::SayTest::test_fourteen",
  "say/say_test.py::SayTest::test_number_negative",
  "say/say_test.py::SayTest::test_number_too_large",
  "say/say_test.py::SayTest::test_one",
  "say/say_test.py::SayTest::test_one_billion",
  "say/say_test.py::SayTest::test_one_hundred",
  "say/say_test.py::SayTest::test_one_hundred_twenty",
  "say/say_test.py::SayTest::test_one_hundred_twenty_three",
  "say/say_test.py::SayTest::test_one_million",
  "say/say_test.py::SayTest::test_one_million_two",
  "say/say_test.py::SayTest::test_one_thousand",
  "say/say_test.py::SayTest::test_one_thousand_two_hundred_thirty_four",
  "say/say_test.py::SayTest::test_twenty",
  "say/say_test.py::SayTest::test_twenty_two",
  "say/say_test.py::SayTest::test_zero",
  "series/series_test.py::SeriesTest::test_empty_series_is_invalid",
  "series/series_test.py::SeriesTest::test_slice_length_cannot_be_negative",
  "series/series_test.py::SeriesTest::test_slice_length_cannot_be_zero",
  "series/series_test.py::SeriesTest::test_slice_length_is_too_large",
  "series/series_test.py::SeriesTest::test_slices_can_include_duplicates",
  "series/series_test.py::SeriesTest::test_slices_of_one_from_one",
  "series/series_test.py::SeriesTest::test_slices_of_one_from_two",
  "series/series_test.py::SeriesTest::test_slices_of_two",
  "series/series_test.py::SeriesTest::test_slices_of_two_overlap",
  "sieve/sieve_test.py::SieveTest::test_find_first_prime",
  "sieve/sieve_test.py::SieveTest::test_find_primes_up_to_10",
  "sieve/sieve_test.py::SieveTest::test_find_primes_up_to_1000",
  "sieve/sieve_test.py::SieveTest::test_limit_is_prime",
  "sieve/sieve_test.py::SieveTest::test_no_primes_under_two",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_1_up_to_100",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_3_or_5_up_to_1",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_3_or_5_up_to_10",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_3_or_5_up_to_100",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_3_or_5_up_to_1000",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_3_or_5_up_to_4",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_3_up_to_7",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_43_or_47_up_to_10000",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_4_or_6_up_to_15",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_5_6_or_8_up_to_150",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_5_or_25_up_to_51",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_7_13_or_17_up_to_20",
  "sum-of-multiples/sum_of_multiples_test.py::SumOfMultiplesTest::test_multiples_of_an_empty_list_up_to_10000",
  "word-count/word_count_test.py::WordCountTests::test_apostrophes",
  "word-count/word_count_test.py::WordCountTests::test_count_multiple_occurrences_of_a_word",
  "word-count/word_count_test.py::WordCountTests::test_count_one_of_each",
  "word-count/word_count_test.py::WordCountTests::test_count_one_word",
  "word-count/word_count_test.py::WordCountTests::test_cramped_list",
  "word-count/word_count_test.py::WordCountTests::test_expanded_list",
  "word-count/word_count_test.py::WordCountTests::test_ignores_punctuation",
  "word-count/word_count_test.py::WordCountTests::test_include_numbers",
  "word-count/word_count_test.py::WordCountTests::test_multiple_spaces_not_detected_as_a_word",
  "word-count/word_count_test.py::WordCountTests::test_non_alphanumeric",
  "word-count/word_count_test.py::WordCountTests::test_normalize_case",
  "word-count/word_count_test.py::WordCountTests::test_quotations",
  "word-count/word_count_test.py::WordCountTests::test_tabs",
  "yacht/yacht_test.py::YachtTests::test_big_straight",
  "yacht/yacht_test.py::YachtTests::test_big_straight_as_little_straight",
  "yacht/yacht_test.py::YachtTests::test_choice",
  "yacht/yacht_test.py::YachtTests::test_four_in_order_but_not_a_little_straight",
  "yacht/yacht_test.py::YachtTests::test_four_of_a_kind",
  "yacht/yacht_test.py::YachtTests::test_four_of_a_kind_is_not_a_full_house",
  "yacht/yacht_test.py::YachtTests::test_fours",
  "yacht/yacht_test.py::YachtTests::test_full_house_is_not_four_of_a_kind",
  "yacht/yacht_test.py::YachtTests::test_full_house_three_small_two_big",
  "yacht/yacht_test.py::YachtTests::test_full_house_two_small_three_big",
  "yacht/yacht_test.py::YachtTests::test_little_straight",
  "yacht/yacht_test.py::YachtTests::test_little_straight_as_big_straight",
  "yacht/yacht_test.py::YachtTests::test_min_1_max_5_but_not_a_little_straight",
  "yacht/yacht_test.py::YachtTests::test_no_ones",
  "yacht/yacht_test.py::YachtTests::test_no_pairs_but_not_a_little_straight",
  "yacht/yacht_test.py::YachtTests::test_not_yacht",
  "yacht/yacht_test.py::YachtTests::test_ones",
  "yacht/yacht_test.py::YachtTests::test_ones_out_of_order",
  "yacht/yacht_test.py::YachtTests::test_sixes",
  "yacht/yacht_test.py::YachtTests::test_two_pair_is_not_a_full_house",
  "yacht/yacht_test.py::YachtTests::test_twos",
  "yacht/yacht_test.py::YachtTests::test_yacht",
  "yacht/yacht_test.py::YachtTests::test_yacht_as_choice",
  "yacht/yacht_test.py::YachtTests::test_yacht_can_be_scored_as_four_of_a_kind",
  "yacht/yacht_test.py::YachtTests::test_yacht_counted_as_threes",
  "yacht/yacht_test.py::YachtTests::test_yacht_is_not_a_full_house",
  "yacht/yacht_test.py::YachtTests::test_yacht_of_threes_counted_as_fives"
]